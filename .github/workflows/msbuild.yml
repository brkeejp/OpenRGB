# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild for Windows

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

  Windows:
    name: build-windows
    runs-on: [self-hosted, windows]

    steps:
    - name: Checkout
      uses: actions/checkout@v1
      with:
        submodules: recursive

    - name: Installing dependencies
      run: |
        cd ..
        git clone https://github.com/Microsoft/vcpkg.git
        cd vcpkg
        git checkout --force 2020.01
        .\bootstrap-vcpkg.bat
        .\vcpkg.exe install qt5:x64-windows
        .\vcpkg.exe install hidapi:x64-windows
        .\vcpkg.exe install libusb:x64-windows
        .\vcpkg.exe install mbedtls:x64-windows
    - name: Clone OpenRGB repository
      run: git clone brkeejp/OpenRGB

    - name: Running cmake (windows)
      run: |
        cd ${{ github.workspace }}/OpenRGB
        mkdir build
        cd build
        cmake .. -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/../vcpkg/scripts/buildsystems/vcpkg.cmake
    - name: Build OpenRGB (windows)
      run: |
        cd ${{ github.workspace }}/OpenRGB/build
        MSBuild.exe OpenRGB.sln /p:Configuration=Release
    - name: Run tests (windows)
      run: |
        cd ${{ github.workspace }}/OpenRGB/build
        MSBuild.exe OpenRGB.sln /t:Build /p:Configuration=Release /p:Platform=x64
    - name: Run distcheck (windows)
      run: |
        cd ${{ github.workspace }}/OpenRGB/build
        MSBuild.exe OpenRGB.sln /t:Build /p:Configuration=Release
